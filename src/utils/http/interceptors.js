import {isArray} from 'lodash'
import { Indicator, Toast } from 'mint-ui';
export default (http,store,router) =>{
  // https://github.com/mzabriskie/axios#interceptors
  http.interceptors.response.use(
    response => {
      if(response.data.status === '10000'){
        return Promise.reject(response)
      }else if(response.data.status !== '200'){
        return Promise.reject(response)
      }
      return response
    },
    /**
    * This is a central point to handle all
    * error messages generated by HTTP
    * requests
    */
    (error) => {
      const { response,request } = error
      if(request.readyState == 4 && request.status == 0){
        Indicator.open({
          text: '网络连接超时',
          spinnerType: 'fading-circle'
        });
      }
      /**
      * If token is either expired, not provided or invalid
      * then redirect to login. On server side the error
      * messages can be changed on app/Providers/EventServiceProvider.php
      */
      if ([401, 400, 403,'401','400','403'].indexOf(response.status) > -1) {
        Toast({
          message: '没有权限!!!',
          iconClass: 'icon icon-error',
          duration: 3000
        });
        router.push({ path: '/' })
      }
      /**
      * Error messages are sent in arrays
      */
      if (isArray(response.data)) {
        store.dispatch('setMessage', { type: 'error', message: response.data.messages })
      /**
      * Laravel generated validation errors are
      * sent in an object
      */
      } else {
        store.dispatch('setMessage', { type: 'validation', message: response.data })
      }

      store.dispatch('setFetching', { fetching: false })

      return Promise.reject(error)
    }
  )
}