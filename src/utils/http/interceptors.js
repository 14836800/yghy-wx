import {isArray} from 'lodash'
import { Indicator, Toast } from 'mint-ui';
import {urlRedirect,appId} from '@/config/index'
import {removeStore,setStore} from '@/utils/helps'
export default (http,store,router) =>{
  // https://github.com/mzabriskie/axios#interceptors
  http.interceptors.response.use(
    response => {
      if(response.data.status === '10000'){
        store.dispatch('setMessage',{type:'error',message:['错误的code']})
        store.dispatch('setFetching', { fetching: false })
        removeStore('openId')
        setTimeout(()=>{
          window.location.href = `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${appId}&redirect_uri=${encodeURIComponent(urlRedirect)}&response_type=code&scope=snsapi_base&state=123#wechat_redirect`
        },2000)
        // router.push({path:'/'})
      }else if(response.data.status === '10001'){
        store.dispatch('setMessage',{type:'validation',message:response.data.msg})
        store.dispatch('setFetching', { fetching: false })
        if(response.data.data){
          setStore('openId',response.data.data.openId)
        }
        setTimeout(()=>{
          router.push({path:'/login'})
        },1000)
      }else if(response.data.status === '800100'){
        store.dispatch('setMessage',{type:'validation',message:response.data.msg})
        store.dispatch('setFetching', { fetching: false })
        removeStore('openId')
        setTimeout(()=>{
          window.location.href = `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${appId}&redirect_uri=${encodeURIComponent(urlRedirect)}&response_type=code&scope=snsapi_base&state=123#wechat_redirect`
        },2000)
        // router.push({path:'/login'})
      }else if(response.data.status !== '200'){
        store.dispatch('setMessage',{type:'error',message:[response.data.msg]})
        store.dispatch('setFetching', { fetching: false })
        return response
        // removeStore('openId')
        // setTimeout(()=>{
        //   window.location.href = `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${appId}&redirect_uri=${encodeURIComponent(urlRedirect)}&response_type=code&scope=snsapi_base&state=123#wechat_redirect`
        // },2000)
        // router.replace({path:'/'})
      }
      return response
    },
    /**
    * This is a central point to handle all
    * error messages generated by HTTP
    * requests
    */
    (error) => {
      const { response,request } = error
      if(request.readyState == 4 && request.status == 0){
        Indicator.open({
          text: '网络连接超时',
          spinnerType: 'fading-circle'
        })
        setTimeout(()=>{
          Indicator.close()
        },1000)
      }
      /**
      * If token is either expired, not provided or invalid
      * then redirect to login. On server side the error
      * messages can be changed on app/Providers/EventServiceProvider.php
      */
      if ([401, 400, 403,'401','400','403'].indexOf(response.status) > -1) {
        Toast({
          message: '没有权限!!!',
          iconClass: 'icon icon-error',
          duration: 3000
        });
        removeStore('openId')
        router.push({ path: '/' })
      }
      /**
      * Error messages are sent in arrays
      */
      if (isArray(response.data)) {
        store.dispatch('setMessage', { type: 'error', message: response.data.messages })
      /**
      * Laravel generated validation errors are
      * sent in an object
      */
      } else {
        store.dispatch('setMessage', { type: 'validation', message: response.data })
      }

      store.dispatch('setFetching', { fetching: false })

      return Promise.reject(error)
    }
  )
}